---
swagger: "2.0"
info:
  version: "2016-08-04T18:21:19Z"
  title: "Calligre"
host: "calligre.com"
basePath: "/api"
schemes:
- "https"
paths:
  /:
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /content:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PostList"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "post"
        in: body
        required: true
        schema:
          $ref: "#/definitions/NewPost"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PostAck"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "Bad request"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"

  /content/get_upload_url:
    get:
      produces:
      - "application/json"
      description: |
        Returns a url & set of fields that can be used to post a photo to S3.
        Photos will be resized for use; non-photo objects will be deleted.
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MediaDestUrl"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /content/{id}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PostDetails"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /content/{id}/likes:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/LikeUsers"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
    title: "Error Schema"
  PostList:
    type: "object"
    title: "List of posts"
    properties:
      count:
        type: "integer"
      nextOffset:
        type: "string"
      posts:
        type: array
        items:
          $ref: '#/definitions/PostDetails'
  PostDetails:
    type: "object"
    description: |
      Details of a post. The ID of the post is the fractional post time in UTC, cast that to a float & interpret it if need be.
    properties:
      id:
        type: "string"
      timestamp:
        type: "float"
      text:
        type: "string"
      media_link:
        type: "string"
        description: "Not included if no media was submitted"
      like_count:
        type: "integer"
      poster_id:
        type: "string"
      poster_name:
        type: "string"
      poster_icon:
        type: "string"
      current_user_likes:
        type: boolean
  PostAck:
    type: "object"
    title: "Post Acknowledgement"
    properties:
      id:
        type: "string"
  LikeUsers:
    type: array
    title: "List of user ids & names who liked a post"
    items:
      $ref: '#/definitions/LikeUser'
  LikeUser:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  MediaDestUrl:
    type: object
    properties:
      url:
        type: string
      fields:
        description: |
          Fields required by S3 that must be posted as part of the file upload.
          In Python, this would be requests.post(post["url"], data=post["fields"], files=files)
        type: object
        properties:
          opaque:
            type: string
  NewPost:
    type: object
    properties:
      text:
        type: string
      media_url:
        type: string
      post_fb:
        type: boolean
      post_twitter:
        type: boolean
